# Calculus notebook

## Section

```elixir
  Mix.install([
      {:axon, "~> 0.6.1"},
      {:nx, "~> 0.7.3"},
      {:exla, "~> 0.7.3"},
      {:bumblebee, "~> 0.5.3"},
      {:explorer, "~> 0.9.1"},
      {:kino, "~> 0.13.2"},
      {:kino_vega_lite, "~> 0.1.13"},
      {:vega_lite, "~> 0.1.9"},
      {:tucan, "~> 0.3.0"},
      {:stb_image, "~> 0.6.9"},
      {:benchee, "~> 1.3"}
  ],
  config: [
    nx: [
      default_backend: EXLA.Backend,
      default_defn_options: [compiler: EXLA]
    ]
  ]
  )

```

```elixir
alias VegaLite, as: Vl

x = Nx.linspace(-10, 10, n: 100_000)
y = Nx.add(Nx.add(Nx.pow(x, 2), Nx.multiply(2, x)), 2)
data = [ x: x, y: y ]

Tucan.lineplot(data, "x", "y", tooltip: true)
|> Tucan.set_title("Calculus Limits")
```

```elixir
in_domain = fn (min, max) -> fn (x) -> x <= max && x >= min end end

flist_filter = fn (t, filter_pred) ->
  t
  |> Nx.to_flat_list()
  |> Enum.filter(filter_pred)
end

[
  x: flist_filter.(x, in_domain.(-2, 0)),
  y: flist_filter.(y, in_domain.(0, 2))
]
|> Tucan.lineplot("x", "y", tooltip: true)
|> Tucan.set_title("Calculus Limits; (-2, 0), (0, 2)")
```

```elixir
[
  x: flist_filter.(x, in_domain.(-1.5, -0.5)),
  y: flist_filter.(y, in_domain.(0.5, 1.5))
]
|> Tucan.lineplot("x", "y", tooltip: true)
|> Tucan.set_title("Calculus Limits; (-1.5, -0.5), (0.5, 1.5)")
```

```elixir
[
  x: flist_filter.(x, in_domain.(-1.1, -0.9)),
  y: flist_filter.(y, in_domain.(0.9, 1.1))
]
|> Tucan.lineplot("x", "y", tooltip: true)
|> Tucan.set_title("Calculus Limits; (-1.1, -0.9), (0.9, 1.1)")

```

```elixir
[
  x: flist_filter.(x, in_domain.(-1.01, -0.99)),
  y: flist_filter.(y, in_domain.(0.99, 1.01))
]
|> Tucan.lineplot("x", "y", tooltip: true)
|> Tucan.set_title("Calculus Limits; (-1.01, -0.99), (0.99, 1.01)")

```
